version: 2.1

workflows:
  build:
    jobs:
      - build
      - lms_unit_tests:
          requires:
            -  build

      - build_edxapp_image:
          filters:
            branches:
              only: Gonzalo/tutor_master

jobs:
  build:
    docker:
      - image: edxops/xenial-common:latest
    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-{{ checksum ".circleci/config.yml" }}-configuration-{{ checksum "scripts/circle-ci-configuration.sh" }}

      # - run:
      #     name: Install deb packages
      #     command: |
      #       source ./scripts/circle-ci-configuration.sh
      # - save_cache:
      #     key: v1-{{ checksum ".circleci/config.yml" }}-configuration-{{ checksum "scripts/circle-ci-configuration.sh" }}
      #     paths:
      #       - "downloads"

      # - restore_cache:
      #     keys:
      #       - v1-{{ checksum ".circleci/config.yml" }}-pip-deps-{{ checksum "requirements/edx/base.txt" }}-{{ checksum "requirements/edx/testing.txt" }}-{{ checksum "requirements/edx/django.txt" }}-{{ checksum "requirements/edunext/base.txt" }}

      - run:
          name: Install pip packages
          command: |
            # If venv has not been restored by restore_cache, set it up.
            export PATH=$PATH:$(npm bin)
            [ ! -f /tmp/workspace/venv/bin/activate ] && virtualenv -p python3.5 /tmp/workspace/venv
            source /tmp/workspace/venv/bin/activate
            # All files listed here must be included in the cache key for pip packages.
            # pip install --exists-action w -r requirements/edx/django.txt
            # pip install --exists-action w -r requirements/edx/testing.txt
            # pip install --exists-action w -r requirements/edx/paver.txt
            pip install --exists-action w -r requirements/edunext/base.txt
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - venv

      - restore_cache:
          keys:
            - v2-{{ checksum ".circleci/config.yml" }}-npm-deps-{{ checksum "package.json" }}

      - run:
          name: Install npm packages
          command: |
            node -v
            npm -v
            npm install
      - save_cache:
          key: v2-{{ checksum ".circleci/config.yml" }}-npm-deps-{{ checksum "package.json" }}
          paths:
            - "node_modules"

  lms_unit_tests:
    docker:
      - image: edxops/xenial-common:latest
    environment:
      - NO_PREREQ_INSTALL: "true"
    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-{{ checksum ".circleci/config.yml" }}-configuration-{{ checksum "scripts/circle-ci-configuration.sh" }}

      - run:
          name: Install deb packages
          command: |
            source ./scripts/circle-ci-configuration.sh
      - attach_workspace:
          at: /tmp/workspace

      - restore_cache:
          keys:
            - v2-{{ checksum ".circleci/config.yml" }}-npm-deps-{{ checksum "package.json" }}

      - run:
          name: Install local pip packages
          command: |
            source /tmp/workspace/venv/bin/activate
            pip install -r requirements/edx/testing.txt
      - run:
          name: Run tests
          no_output_timeout: 30m
          command: |
            source /tmp/workspace/venv/bin/activate
            export PATH=$PATH:$(npm bin)
            paver test_system -s lms --cov-args="-p"

  build_edxapp_image:
    docker:
      - image: edxops/focal-common:latest
    environment:
      TUTOR_ROOT: "tmp/tutor_build/tutor_root/tutor\nexport"
      TUTOR_PLUGINS_ROOT: "/tmp/tutor_build/tutor_root/tutor-plugins"

    steps:

      - run:
          name: Installing Docker CLI
          command: |
            apt update
            apt install apt-transport-https ca-certificates curl gnupg-agent software-properties-common -y
            curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
            add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
            apt install docker-ce-cli=5:19.03.13~3-0~ubuntu-focal -y
    

      - run:
          name: Prepare tutor_distro environment
          command: |
            mkdir -p /tmp/tutor_build /tmp/tutor_build/tutor_root/tutor
            cd /tmp/tutor_build
            git clone -b v11.2.8 https://github.com/overhangio/tutor.git
            cd tutor && pip install -e . && cd ..
            GIT_SSH_COMMAND="ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no" pip install git+ssh://git@bitbucket.org/edunext/plugin-distro-ednx.git@stage#egg=plugin-distro-ednx==stage

      - run:
          name: Enable tutor_distro plugins
          working_directory: /tmp/tutor_build
          command: |
            tutor plugins enable distro_ednx

      - run:
          name: Creating tutor config
          working_directory: /tmp/tutor_build
          command: |
            tutor plugins list
            tutor config save

      - setup_remote_docker:
          version: 19.03.13
          docker_layer_caching: true

      - run:
          name: Building openedx image with tutor_distro
          working_directory: /tmp/tutor_build
          command: |
            main_repo_url="<< pipeline.project.git_url >>.git"
            main_repo_branch="<< pipeline.git.branch >>"
            tutor images build openedx --build-arg EDX_PLATFORM_REPOSITORY=$main_repo_url --build-arg EDX_PLATFORM_VERSION=$main_repo_branch
      
      - run:
          name: Pushing openedx image to Docker Registry with tutor_distro
          working_directory: /tmp/tutor_build
          command: |
            echo $DOCKER_PASSWORD | docker login -u $DOCKER_USER --password-stdin
            tutor images push openedx

      - run:
          name: Building openedx dev image 
          working_directory: /tmp/tutor_build
          command: |
            tutor images build openedx-dev
            
      
      - run:
          name: Pushing openedx dev image to Docker Registry with tutor_distro
          working_directory: /tmp/tutor_build
          command: |
            echo $DOCKER_PASSWORD | docker login -u $DOCKER_USER --password-stdin
            docker push docker.io/ednxops/ednx_distro_edxapp_dev:latest
  